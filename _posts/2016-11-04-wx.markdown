---
layout: post
title:  "微信支付"
date:   2016-11-4 16:10:38 +0800
categories: jekyll update
---

<img src="/images/fulls/wx.jpg" class="fit image">


微信支付接口现在也慢慢的像支付宝一个可以利用api接口来实现第三方网站或应用进行支付了，下文整理了一个php微信支付接口开发程序

php微信支付接口开发程序讲解：

必要条件：
appid //公众号后台开发者中心获得（和邮件内的一样）  

mchid//邮件内获得 

key//商户后台自己设置 

appsecret //公众号开发者中心获得
两个证书文件，邮件内获得 apiclient_cert.pem   apiclient_key.pem
注意事项：
微信支付需申请开通
微信公众平台开发者文档：http://mp.weixin.qq.com/wiki/home/index.html
微信支付开发者文档：https://pay.weixin.qq.com/wiki/doc/api/index.html
微信支付SDK下载地址：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=11_1
公众号后台微信支付-》开发配置-》新增测试目录和测试个人微信号。
开发者中心-》网页授权获取用户基本信息-》修改成你的测试域名。否则会出现redirect_uri 参数错误
——————————后续待完善——————-
微信支付就绪页面后台自行了三次操作：

1.获取openid

/使用jsapi接口

		$jsApi = new JsApi_pub();  
		//=========步骤1：网页授权获取用户openid============
		//通过code获得openid
		if (!isset($_GET['code']))
			{
		//触发微信返回code码
		$url = $jsApi->createOauthUrlForCode(WxPayConf_pub::JS_API_CALL_URL);
		//echo $url;
		Header("Location: $url");
			}else
			{
		//获取code码，以获取openid
		$code = $_GET['code'];
		$jsApi->setCode($code);
		$openid = $jsApi->getOpenid();

刚开始的时候第一步也遇到问题，没法获得openid这个和部分服务器有关，demo内用的是curl获取的方式。
奇怪我的服务器curl一直无法获取到。后来改成file_get_contents可以正常获取了。
可这并不是解决之道。因为后面还需要用到更多的curl操作。
看到开发文档里面有一个地方写证书操作需要libcurl 7.20.1以上版本，然后我就一直在整服务器想把linux的php curl版本提高。最后面我是换到了另外一台windows服务器就好了。
先暂时这样吧，下次需要用的时候再调试。

第二步：获取与支付订单号id
代码如下


		$unifiedOrder = new UnifiedOrder_pub();
		    
		  //var_dump($unifiedOrder);
		  //设置统一支付接口参数
		  //设置必填参数
		  //appid已填,商户无需重复填写
		  //mch_id已填,商户无需重复填写
		  //noncestr已填,商户无需重复填写
		  //spbill_create_ip已填,商户无需重复填写
		  //sign已填,商户无需重复填写
		  $unifiedOrder->setParameter("openid","$openid");//商品描述
		  $unifiedOrder->setParameter("body","贡献一分钱");//商品描述
		  //自定义订单号，此处仅作举例
		  $timeStamp = time();
		  $out_trade_no = WxPayConf_pub::APPID."$timeStamp";
		  $unifiedOrder->setParameter("out_trade_no","$out_trade_no");//商户订单号 
		  $unifiedOrder->setParameter("total_fee","1");//总金额
		  $unifiedOrder->setParameter("notify_url",WxPayConf_pub::NOTIFY_URL);//通知地址 
		  $unifiedOrder->setParameter("trade_type","JSAPI");//交易类型
		  //非必填参数，商户可根据实际情况选填
		  //$unifiedOrder->setParameter("sub_mch_id","XXXX");//子商户号 
		  //$unifiedOrder->setParameter("device_info","XXXX");//设备号 
		  //$unifiedOrder->setParameter("attach","XXXX");//附加数据 
		  //$unifiedOrder->setParameter("time_start","XXXX");//交易起始时间
		  //$unifiedOrder->setParameter("time_expire","XXXX");//交易结束时间 
		  //$unifiedOrder->setParameter("goods_tag","XXXX");//商品标记 
		  //$unifiedOrder->setParameter("openid","XXXX");//用户标识
		  //$unifiedOrder->setParameter("product_id","XXXX");//商品ID
		  
		  $prepay_id = $unifiedOrder->getPrepayId();
		    
		  //echo 'prepay_id:';
		  var_dump($prepay_id);

这一步也遇到非常多的问题。
首先微信支付测试比较困难，只有在微信内才可以测试。我就用手机刷来刷去。
其次使用var_dump调试也不好使额。打印一些 xml格式的文件只显示字符长度，不显示内容。于是用log的形式写在服务器上调试，log代码：
代码如下

		/ 打印log
		  function log_d($word) 
		  {
		    $log_name="./logd.log";//log文件路径
		    $fp = fopen($log_name,"a");
		    flock($fp, LOCK_EX) ;
		    fwrite($fp,"执行日期：".strftime("%Y-%m-%d-%H:%M:%S",time())."n".$word."nn");
		    flock($fp, LOCK_UN);
		    fclose($fp);
		  }

在demo里面的 WxPayPubHelper.php 里面 用 $this->log_d(xxx);调用。
刚开始的时候由于给我的mchid和 appid不匹配一直报错。。是他们给错我账号了。刚开始我也不懂乱试。这一步的调试在 getPrepayId（）内 var_dump($this->result); 就能看到错误代码。

第三步：生成支付前端 js代码就绪到网页上：
代码如下

		$jsApi->setPrepayId($prepay_id);
		  
		$jsApiParameters = $jsApi->getParameters();

这部分又遇到了问题：
android返回“System：Access_denied”，ios返回”access_control:not_allowed”
搜了很多百度。其实早就看到了这个东西一直没注意！
发起授权请求的页面必须是在授权目录下的页面，而不能是存在与子目录中。否则会返回错误
支付文件我放在了/域名/pay/demo/
刚开始的时候我一直是到/域名/pay/结尾以为就可以了。支持子目录，结果是不行的!


		—————————最后看下图—————

		wxpay1
		wxpay3
		wxpay2 

		—————–流程中的xmljs——————–

待提交生成与支付订单id：
代码如下

	<xml>
	 <openid><![CDATA[ou9dHt0L8qFLI1foP-kj5x1mDWsM]]></openid>
	 <body><![CDATA[贡献一下]]></body>
	 <out_trade_no><![CDATA[wx88888888888888881414411779]]></out_trade_no>
	 <total_fee>1</total_fee>
	 <notify_url><![CDATA[http://shanmao.me/wxpay/notify_url.php]]></notify_url>
	 <trade_type><![CDATA[JSAPI]]></trade_type>
	 <appid><![CDATA[wx8888888888888888]]></appid>
	 <mch_id>10012345</mch_id>
	 <spbill_create_ip><![CDATA[61.50.221.43]]></spbill_create_ip>
	 <nonce_str><![CDATA[60uf9sh6nmppr9azveb2bn7arhy79izk]]></nonce_str>
	 <sign><![CDATA[2D8A96553672D56BB2908CE4B0A23D0F]]></sign>
	</xml>

提交后返回正确，其中包含了perpay_id:

	<xml>
	 <return_code><![CDATA[SUCCESS]]></return_code> 
	 <return_msg><![CDATA[OK]]></return_msg> 
	 <appid><![CDATA[wx8888888888888888]]></appid> 
	 <mch_id><![CDATA[10012345]]></mch_id> 
	 <nonce_str><![CDATA[Be8YX7gjCdtCT7cr]]></nonce_str> 
	 <sign><![CDATA[885B6D84635AE6C020EF753A00C8EEDB]]></sign> 
	 <result_code><![CDATA[SUCCESS]]></result_code> 
	 <prepay_id><![CDATA[wx201410272009395522657a690389285100]]></prepay_id> 
	 <trade_type><![CDATA[JSAPI]]></trade_type> 
	</xml>

生成支付用的js :

	{
	  "appId": "wx8888888888888888",
	  "timeStamp": "1414411784",
	  "nonceStr": "gbwr71b5no6q6ne18c8up1u7l7he2y75",
	  "package": "prepay_id=wx201410272009395522657a690389285100",
	  "signType": "MD5",
	  "paySign": "9C6747193720F851EB876299D59F6C7D"
	}

支付成功后返回的通知xml:

	<xml><appid><![CDATA[wx8888888888]]></appid>
	<bank_type><![CDATA[CCB_DEBIT]]></bank_type>
	<fee_type><![CDATA[CNY]]></fee_type>
	<is_subscribe><![CDATA[Y]]></is_subscribe>
	<mch_id><![CDATA[1011111]]></mch_id>
	<nonce_str><![CDATA[38gt0ffgsvfsdfsdfbt1981duv63p7]]></nonce_str>
	<openid><![CDATA[o4p3SjfdsfdsfdsdCE5Y2XHw4]]></openid>
	<out_trade_no><![CDATA[wx4b56d1fsdfdsf416643247]]></out_trade_no>
	<result_code><![CDATA[SUCCESS]]></result_code>
	<return_code><![CDATA[SUCCESS]]></return_code>
	<sign><![CDATA[356EfsdfdsfsdsfE69509EDA344]]></sign>
	<sub_mch_id><![CDATA[10018826]]></sub_mch_id>
	<time_end><![CDATA[20141122160122]]></time_end>
	<total_fee>1</total_fee>
	<trade_type><![CDATA[JSAPI]]></trade_type>
	<transaction_id><![CDATA[100715001020fsdfsd1220006123174]]></transaction_id>
	</xml>

以上就是本文的全部内容，希望对大家的学习有所帮助。