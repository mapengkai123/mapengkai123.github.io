---
layout: post
title:  "PHP面向对象"
date:   2013-11-02 11:10:38 +0800

---
<img src="/images/fulls/08.jpg" class="fit image"> 


面向对象编程（Object Oriented Programming, OOP, 面向对象程序设计）是一种计算机编程架构，OOP的一条基本原则是计算机程序是由单个能够起到子程序作用的单元或对象组合而成，OOP达到了软件工程的三 个目标：重用性、灵活性和扩展性。为了实现整体运算，每个对象都能够接收信息、处理数据和向其它对象发送信息。面向对象一直是软件开发领域内比较热门的话 题，首先，面向对象符合人类看待事物的一般规律。其次，采用面向对象方法可以使系统各部分各司其职、各尽所能。为编程人员敞开了一扇大门，使其编程的代码更简洁、更易于维护，并且具有更强的可重用性。

 面向对象程序的单位就是对象，但对象又是通过类的实例化出来的，所以我们首先要做的就是如何来声明类， 做出来一个类很容易，只要掌握基本的程序语法定义规则就可以做的出来，那么难点在那里呢？ 一个项目要用到多少个类，用多少个对象， 在那要定义类，定义一个什么样的类，这个类实例化出多少个对象， 类里面有多少个属性， 有多少个方法等等,这就需要读者通过在实际的开发中就实际问题分析设计和总结了。 类的定义：
  1 class 类名
  2{
  3}

使用一个关键字class和后面加上一个你想要的类名以及加上一对大括号， 这样一个类的结构就定义出来了，只要在里面写代码就可以了， 但是里面写什么？ 能写什么？怎样写才是一个完整的类呢？上面讲过来，使用类是为了让它实例出对象来给我们用， 这就要知道你想要的是什么样的对象了，像上面我们讲的一个装机配置单上写什么，你装出来的机子就有什么。比如说，一个人就是一个对象，你怎么把一个你看好 的人推荐给你们领导呢？当然是越详细越好了：
首先， 你会介绍这个人姓名、性别、年龄、身高、体重、电话、家庭住址等等。
然后，你要介绍这个人能做什么， 可以开车， 会说英语， 可以使用电脑等等。
只要你介绍多一点， 别人对这个人就多一点了解， 这就是我们对一个人的描述， 现在我们总结一下，所有的对象我们用类去描述都是类似的， 从上面人的描述可以看到， 做出一个类来， 从定义的角度分两部分， 第一是从静态上描述， 第二是从动态上描述， 静态上的描述就是我们所说的属性， 像上面我们看到的，人的姓名、性别、年龄、身高、体重、电话、家庭住址等等。 动态上也就是人的这个对象的功能，比如这个人可以开车， 会说英语， 可以使用电脑等等，抽象成程序时，我们把动态的写成函数或者说是方法，函数和方法是一样的。所以，所有类都是从属性和方法这两方面去写， 属性又叫做这个类的成员属性，方法叫做这个类的成员方法。

  1 class 人
  2{
  3    成员属性：姓名、性别、年龄、身高、体重、电话、家庭住址
  4    成员方法：可以开车， 会说英语， 可以使用电脑
  5}

属性：
通过在类定义中使用关键字" var "来声明变量，即创建了类的属性，虽然在声明成员属性的时候可以给定初值， 但是在声明类的时候给成员属性初始值是没有必要的，比如说要是把人的姓名赋上“张三”，那么用这个类实例出几十个人，这几十个人都叫张三了，所以没有必 要， 我们在实例出对象后给成员属性初始值就可以了。
如：　var $somevar;
方法(成员函数)：
通过在类定义中声明函数，即创建了类的方法。

如：

 1 function somefun(参数列表)
 2 {
 3   ... ...
 4 }


  1 <?php
  2 class Person
  3{
  4  // 下面是人的成员属性
  5 var $name;  //人的名子
  6  var $sex;   //人的性别
  7 var $age;   //人的年龄
 
  8  // 下面是人的成员方法
  9 function say() // 这个人可以说话的方法
  10  {
  11      echo "这个人在说话";
  12 }
 
  13 function run() // 这个人可以走路的方法
  14  {
  15    echo "这个人在走路";
  16  }
  17}
  18?>

上面就是一个类的声明， 从属性和方法上声明出来的一个类， 但是成员属性最好在声明的时候不要给初使的值， 因为我们做的人这个类是一个描述信息， 将来用它实例化对象， 比如实例化出来10个人对象， 那么这10个人， 每一个人的名子， 性别， 年龄都是不一样的， 所以最好不要在这个地方给成员属性赋初值， 而是对每个对象分别赋值的。
用同样的办法可以做出你想要的类了， 只要你能用属性和方法能描述出来的实体都可以定义成类， 去实例化对象。
为了加强你对类的理解， 我们再做一个类， 做一个形状的类， 形状的范围广了点， 我们就做个矩形吧， 先分析一下， 想一想从两方面分析，矩形的属性都有什么？ 矩形的功能都有什么？
{
    //　矩形的属性
    矩形的长；
    矩形的宽；
 
    //　矩形的方法
    矩形的周长；
    矩形的面积；
}
PHP代码：
1 <?php
2 class Rect
3 {
4     var $kuan;
5     var $gao;
6 
7     function zhouChang()
8     {
9        计算矩形的周长；
10    }
11 
12    function mianJi()
13    {
14        计算矩形的面积；
15    }
16 }
?>

如果用这个类来创建出多个矩形对象，每个矩形对象都有自己的长和宽， 都可以求出自己的周长和面积了。