---
layout: post
title:  "PHP代码结构及函数"
date:   2013-10-16 14:10:38 +0800
categories: jekyll update
---

<img src="/images/fulls/php.jpg" class="fit image">

一、PHP的三大结构

1).顺序结构 ：代码从上之下依次执行

2).分支结构

给定条件，不同的条件下产生的结果应该不一样。
分支结构：通过条件的判断，选择性的执行相应的代码。
分支结构有两种：if分支，switch分支
 
if的语法结构
 if（条件表达式）{
  //语句执行体  条件为真时执行
}
if.... else
if（条件表达式）{
  //语句执行体  条件为真时执行
}else{
//语句执行体  条件为假时执行
}
if..elseif....else
if（条件表达式1）{
  //语句执行体  满足条件1时执行
}elseif(条件表达式2){
//语句执行体  满足条件2时执行
}else{
 //语句执行体  当前面的条件都不满足时执行
}

 
Switch语法
switch(条件表达式){
  case 值1:
       //执行语句体1
       break；
 case 值2:
       //执行语句体2
       break；
 default :
  //所有条件都不满足时执行
} 

if和switch的区别

	1.if条件表达式通常是比较运算或者逻辑运算，
	而switch的条件表达式通常是固定值

	2.if分支是只能唯一满足一个条件，
	但是switch可以执行多个条件（没有break）
	if判断条件是顺序判断，而switch是循环判断

3).循环结构:

循环结构指的是有一段代码需要在指定的某个范围内重复的执行
php中的循环：for，while，do-while，foreach，foreach是php中专门为数组遍历提供的循环。

1、for循环结构
for(表达式1;表达式2;表达式3){
	//循环体4
}

流程：

	①条件初始化：执行表达式1；
	②执行条件判断：表达式2；
	③满足条件：执行循环体：循环体4；
	④：执行循环条件变更：表达式3；
	⑤：重复②③④直到③步中，不满足条件结束

2、while循环结构

只需要判断循环条件，在循环内部控制循环条件变更的循环。
语法
while(条件表达式){
	//循环体
	//循环控制
	//循环变量的变更
}

3、do while 循环结构
与while循环一致的，区别在于do while循环一定会执行一次循环体，而while不一定。
语法
do{
	//循环体
	//循环控制
	//循环条件变更
}while(条件表达式)


4、循环控制条件
  break   终止整个循环，直接退出
 continue  终止本次循环，进行下一次循环
 
二、PHP中的函数
系统函数 
系统函数：系统已经定以后，用户只需要调用的函数 
自定义函数
1、函数定义 :
  function 函数名（形参1，形参2）{
   //函数体
  //Return  返回值
} 
2、函数调用
 函数名（实参）
3、函数命名：通常的函数命名方式有两种：驼峰法和下划线法
     驼峰法：首字母小写，后面跟的单词首字母大写
参数列表：可以没有，也可以是多个
返回值：可以没有
4、参数的传值: 直接传值 、引用传值

形参与实参的关系

	1.如果定义函数的时候指定了形参，那么调用时必须传入实际的参数
	2.实参的个数必须不能少于形参的个数，多于的部分会被忽略掉
	3.实参的位置必须与形参对应
	4.形参的名字与实参的名字没有半点关系

数据类型判断的函数
所有的函数的返回值都是布尔类型：如果是对应的类型返回true，否则返回false

	is_bool：判断是否是布尔类型
	is_float：判断浮点型
	is_integer：判断整型  is_int
	is_object：判断对象
	is_array：判断数组
	is_string：判断字符串
	is_scalar：scalar是标量的，判断是基本数据类型：整型，浮点型，布尔型和字符串型
	is_null：是否为空
	is_numeric：判断数字或者纯数字组成的字符串

三、文件包含 

定义：字面意思是一个文件中包含另外一个文件，希望对应文件的内容可以在当前文件中被使用。

意义：将界面结构中部分被重用的结构部分抽离出来形成单独的文件，然后在每一次需要使用该部分结构的时候，将对应的代码给包含进去

语法：有两套文件包含方式

	include：include  ‘文件名字’   / include(‘文件名字’)
	require：require  ‘文件名字’   / require (‘文件名字’)


require和include的区别
都是包含文件，都是独立编译。
区别在于require一定会去包含对应的文件，如果文件不存在那么会导致致命错误，从而导致代码不再继续执行。
include会尝试去包含文件，如果不存在，会给一个错误提示，但是不影响后续代码的继续执行。
为了整个程序的执行，可以使用require_once    include_once 代替

四、常用系统函数

时间日期函数
PHP中的时间日期函数很强大
time：得到当前时间的时间戳（整型：从格林威治时间1970年1月1日0时0分0秒开始）秒数
date：时间序列化函数，将指定的时间戳转换成规定时间日期的显示格式（随意的字符串：有专业的格式符规定），如果没有指定时间戳，系统默认使用当前时间的时间戳
strtotime：时间日期格式的字符串转换成对应的时间戳（只要是正确的英语时间表达方式，都可以进行转换）

设置时区：
 在PHP的配置文件php.ini中加载以下语句
#加载PHP配置文件的目录
extension_dir = "E:/server/php5/ext"
#把时区改为中国时区
date.timezone =prc
使用phpinfo()函数检验

数学函数
abs：绝对值
floor：向下取整
ceil：向上取整
round：四舍五入
rand：取得一个指定范围内的随机整数

五、浏览器提交数据

1.浏览器为什么要提交数据给服务器？
告诉服务器要做提供什么样的服务

2.浏览器提交数据的方式？
URL：将数据绑定在url之后

表单：<form>，将所有的要提交的数据放到对应的表单内部
	POST：数据采用post方式提交，post提交是将数据打包提交，不会绑定在url后面
	GET：数据采用get方式提交，浏览器将form表单中的数据自动的绑定到url后面

3.post和get的区别
a)提交方式不一样，post提交看不到数据，但是get可以看到（在URL后面）
b)安全性不一样：post看不见，get看得见
c)二者传输的数据量不一样：get理论上不超过2KB，post理论上可以达到8M

五、服务器接收数据
1.php采用什么方式接收数据？
a)$_GET：接收全部get方式提交的数据，形成的是一个数组，表单名字（name属性）作为键名，数据作为键值
b)$_POST：接收全部post方式提交的数据，与$_GET形式一样。
c)$_REQUEST：不管是get方式提交还是post方式提交，都能够接收，而且还能接受其他额外数据。

$_REQUEST接收数据存在安全漏洞，原因是因为$_REQUEST = array_merge($_GET,$_POST);
php.ini中有一个选项控制$_REQUEST的覆盖顺序：request_order